version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: ["redis-server", "--save", "20", "1", "--loglevel", "warning"]
    ports:
      - "6379:6379"
    volumes:
      - redisdata:/data

  wa:
    build:
      context: ./wa
      dockerfile: Dockerfile
    image: wa-gateway:latest
    container_name: wa
    restart: unless-stopped
    environment:
      PORT: 3000
      APP_WEBHOOK_URL: http://app:3000/api/wa/webhook
      LOG_LEVEL: info
    ports:
      - "3001:3000"
    volumes:
      - wa_store:/app/store
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL}
      BETTER_AUTH_SECRET: ${BETTER_AUTH_SECRET}
      BETTER_AUTH_URL: ${BETTER_AUTH_URL:-http://localhost:3000}
      NEXT_PUBLIC_BETTER_AUTH_URL: ${NEXT_PUBLIC_BETTER_AUTH_URL:-http://localhost:3000}
      REDIS_URL: redis://redis:6379
      WA_OUTBOUND_URL: ${WA_OUTBOUND_URL:-http://wa:3000}
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis
      - wa

volumes:
  pgdata:
  redisdata:
  wa_store:
